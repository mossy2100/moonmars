<?php

/**
 * Find out whether a member wants a certain notification in a certain category.
 * Returns TRUE, FALSE, or an array of conditions.
 *
 * @todo update to return NXN_NO, NXN_YES or NXN_SOME.
 * We'll have to get the selected conditions from another method.
 *
 * @param string $category
 *   site, channel, followee or group
 * @param string $nxn_key
 * @return bool|array
 */
public function wantsNxn($nxn_category, $nxn_key) {

  dbg("wantsNxn($nxn_category, $nxn_key)");
  dbg($this->nxnsWanted);

  // Check if we already got this result:
  if (!isset($this->nxnsWanted[$nxn_category][$nxn_key])) {

    dbg("We don't have this result, look it up.");

    // Check if it's one of the notifications that has conditions.
    $full_key = "$nxn_category-$nxn_key";
    $condition_nxns = array(
      'site-new-member',
      'site-new-group',
      'site-new-item',
      'site-new-comment',
      'channel-new-item',
      'channel-new-comment',
      'followee-new-item',
      'followee-new-comment',
      'group-new-item',
      'group-new-comment',
    );

    if (in_array($full_key, $condition_nxns)) {
      // A conditional notification.
      dbg('conditional');

      // Check if we have the information in a user object.
      $new_field = 'field_' . str_replace('-', '_', $full_key) . '_nxn';
      if (isset($this->entity->$new_field)) {
        dbg('look in user object');

        $wants = $this->field($new_field);
      }
      else {

        dbg('look in db');

        $col = "{$new_field}_value";
        $q = db_select("field_data_{$new_field}", 'nf')
          ->fields('nf', array($col))
          ->condition('entity_id', $this->uid());
        dbg_query($q);
        $wants = $q->execute()->fetchField();
      }

      dbg("wants $wants");

      switch ($wants) {
        case 'none':
          $this->nxnsWanted[$nxn_category][$nxn_key] = FALSE;
          break;

        case 'all':
          $this->nxnsWanted[$nxn_category][$nxn_key] = TRUE;
          break;

        case 'some':
          // If they chose to be notified about only some of the new things, which ones?
          $which_field = str_replace('new', 'which', $new_field);
          $which = array();

          if (isset($this->entity->$which_field)) {
            dbg('look in user object');

            $values = $this->entity->$which_field;
            if ($values && isset($values[LANGUAGE_NONE]) && is_array($values[LANGUAGE_NONE])) {
              foreach ($values[LANGUAGE_NONE] as $value) {
                if (isset($value['value']) && $value['value']) {
                  $which[] = $value['value'];
                }
              }
            }
          }
          else {
            dbg('look in db');

            // Look in the database table:
            $col = "{$which_field}_value";
            $q = db_select("field_data_{$which_field}", 'nxn')
              ->fields('nxn', array($col))
              ->condition('entity_id', $this->uid());
            dbg_query($q);
            $rs = $q->execute();
            foreach ($rs as $rec) {
              $which[] = $rec->$col;
            }
          }

          $this->nxnsWanted[$nxn_category][$nxn_key] = $which;
          break;

        default:
          // The value isn't set, so fall back to default:
          dbg('using default');
          $this->nxnsWanted[$nxn_category][$nxn_key] = Nxn::defaultPref($nxn_category, $nxn_key);
          break;

      } // switch
    }
    else {
      // A miscellaneous notification.
      dbg('misc');

      // Check if we have the information in a user object.
      $field = "field_{$nxn_category}_misc_nxn";
      if (isset($this->entity->$field)) {
        dbg('look in user object');

        // Default the desired value to FALSE. We can't use the default here (which is usually TRUE), because
        // there's no way to tell the difference between the value never having been set and it being switched off.
        $this->nxnsWanted[$nxn_category][$nxn_key] = FALSE;

        $values = $this->entity->$field;
        dbg($values);

        if ($values && isset($values[LANGUAGE_NONE]) && is_array($values[LANGUAGE_NONE])) {
          // Run through the selected miscellaneous options and set them to TRUE, which may overwrite the FALSE value just set:
          foreach ($values[LANGUAGE_NONE] as $value) {
            if (isset($value['value']) && $value['value']) {
              $this->nxnsWanted[$nxn_category][$value['value']] = TRUE;
            }
          }
        }

      }
      else {
        dbg('look in db');

        // Look in the database table:
        $col = "{$field}_value";
        $q = db_select("field_data_{$field}", 'mn')
          ->fields('mn', array($col))
          ->condition($col, $nxn_key)
          ->condition('entity_id', $this->uid());
        dbg_query($q);
        $rs = $q->execute();
        $this->nxnsWanted[$nxn_category][$nxn_key] = (bool) $rs->rowCount();
      }
    }
  }
  else {
    dbg("We have this result.");
  }

  return $this->nxnsWanted[$nxn_category][$nxn_key];
}
