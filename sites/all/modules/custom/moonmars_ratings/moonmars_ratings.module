<?php

use \AstroMultimedia\Drupal\Entity;
use \AstroMultimedia\MoonMars\Member;

function moonmars_ratings_menu() {
  $items['ajax/rate'] = [
    'page callback'    => 'moonmars_ratings_ajax_rate',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  ];
  return $items;
}

/**
 * Return the names for different ratings.
 *
 * @return array
 */
function moonmars_ratings_names() {
  return [
    -2 => 'warning',
    -1 => 'dislike',
//     0 => 'meh',
     1 => 'like',
     2 => 'favourite',
  ];
}

/**
 * Display a set of rating buttons.
 *
 * @param int $selected
 * @return string
 */
function moonmars_ratings_buttons(Member $member, Entity $entity) {
  $current_rating = $member->rating($entity);

  $entity_type = $entity->entityType();
  $entity_id = $entity->id();

  $html = "<div id='rating-buttons-{$entity_type}-{$entity_id}' class='rating-buttons' data-entity-type='$entity_type' data-entity-id='$entity_id'>\n";

  foreach (moonmars_ratings_names() as $rating => $rating_name) {
    $sign = ($rating < 0 ) ? '-' : ($rating == 0 ? '' : '+');
    $title = ucfirst($rating_name) . " ($sign" . format_plural(abs($rating), '1 point', '@count points')  . ")";
    $html .= "<input type='button' class='rating-button rating-button-{$rating_name}";
    // Highlight the current selection:
    if ($current_rating !== FALSE && $rating == $current_rating) {
      $html .= " selected";
    }
    $html .= "' data-rating='$rating' title='$title'>\n";
  }

  $html .= "</div>\n";

  return $html;
}

/**
 * AJAX callback for rating things.
 */
function moonmars_ratings_ajax_rate() {
  // Get request params:
  $entity_type  = isset($_REQUEST['entity_type']) ? $_REQUEST['entity_type']        : NULL;
  $entity_id    = isset($_REQUEST['entity_id'])   ? ((int) $_REQUEST['entity_id'])  : NULL;
  $rating       = isset($_REQUEST['rating'])      ? ((int) $_REQUEST['rating'])     : NULL;

  // Get the logged-in member:
  $logged_in_member = Member::loggedInMember();

  // Begin the data array:
  $data = [
    'entity_type' => $entity_type,
    'entity_id'   => $entity_id,
    'rating'      => $rating,
  ];

  // Check params:
  if (!$entity_type || !$entity_id || is_null($rating) || !array_key_exists($rating, moonmars_ratings_names()) || !$logged_in_member) {
    $data['result'] = FALSE;
    $data['error'] = 'Invalid parameters';
    echo json_encode($data);
    return;
  }

  // Update the rating:
  $result = $logged_in_member->rating(moonmars_actors_get_actor($entity_type, $entity_id), $rating);
//  dbg($result);

  // Update result:
  $data['result'] = TRUE;
  $data = array_merge($data, $result);
  echo json_encode($data);
  return;
}
