<?php
// $Id$

/**
 * !! DO NOT EDIT THIS FILE !!
 *
 * This class has been auto-generated by the classes module. Any changes you
 * make to this file will be overwritten whenever the class is regenerated.
 *
 * If you want to add your own properties and methods to this class, add them to
 * the <class> class instead (found in <class>.class.php).
 *
 * @version <dt_generated>
 * @author shaunmoss
 */
abstract class x_base_class extends XNode {

  //////////////////////////////////////////////////////////////////////////////
  // Static properties.

  /**
   * The content type corresponding to this class.
   *
   * @var string
   */
  protected static $contentType = '<type>';

  /**
   * Static array of information about virtual properties.
   *
   * @var array
   */
  protected static $propertyInfo = '(property_info)';

  /**
   * Flag to record whether or not we merged the CCK property information with
   * the node property information.
   *
   * @var bool
   */
  protected static $propertyInfoMerged = FALSE;
  
  
  //////////////////////////////////////////////////////////////////////////////
  // Core static methods.

  /**
   * Factory object create method.
   *
   * @param mixed $node = NULL
   *   @see XNodeBase::create() for different options for this parameter.
   * @return object
   *   Or FALSE if the object couldn't be created.
   */
  public static function create($node = NULL) {
    return parent::create($node, self::$contentType);
  }

  /**
   * Get the content type for this class.
   * 
   * @return string
   */
  public static function getContentType() {
    return self::$contentType;
  }
  
  /**
   * Get all nodes of this type as an array of options suitable for a FAPI
   * select element.
   *
   * @param bool $published = NULL
   *   If omitted then both published and unpublished nodes will be returned.
   * @return array
   */
  public static function getOptions($published = NULL) {
    return parent::getOptions(self::$contentType, $published);
  }

  /**
   * Get the nids of all nodes of this type.
   *
   * @param bool $published = NULL
   *   If omitted then both published and unpublished nodes will be returned.
   * @return array
   */
  public static function getNids($published = NULL) {
    return parent::getNids(self::$contentType, $published);
  }

  /**
   * Get all nodes of this type.
   *
   * @param bool $published = NULL
   *   If omitted then both published and unpublished nodes will be returned.
   * @return array
   */
  public static function getAll($published = NULL) {
    return parent::getAll(self::$contentType, $published);
  }

  
  //////////////////////////////////////////////////////////////////////////////
  // Accessor and mutator methods.
//getters_setters
}
