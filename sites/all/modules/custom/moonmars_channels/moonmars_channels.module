<?php

define('MOONMARS_CHANNEL_DEFAULT_PAGE_SIZE', 10);

/**
 * Implements hook_menu().
 */
//function moonmars_channels_menu() {
//}

/**
 * Return array of node types that have channels.
 *
 * @return array
 */
function moonmars_channels_node_types() {
  return array(
    'group',
    'event',
    'project'
  );
}

/**
 * Implements hook_node_insert().
 */
function moonmars_channels_node_insert($node) {
  if (in_array($node->type, moonmars_channels_node_types())) {
    // Ensure that a channel exists for the node:
    Channel::entityChannel('node', $node->nid);
  }
}

/**
 * Implements hook_node_update().
 */
function moonmars_channels_node_update($node) {
  // Ensure that a channel exists for the node:
  moonmars_channels_node_insert($node);
}

/**
 * Implements hook_user_insert().
 */
function moonmars_channels_user_insert(&$edit, $account, $category) {
  // Ensure that a channel exists for the user:
  Channel::entityChannel('user', $account->uid);
}

/**
 * Implements hook_user_update().
 */
function moonmars_channels_user_update(&$edit, $account, $category) {
  // Ensure that a channel exists for the user:
  moonmars_channels_user_insert($edit, $account, $category);
}

/**
 * Checks if we're on a node page with an embedded channel.
 *
 * @return bool
 */
function moonmars_channels_is_embedded_channel_page() {
  $n_args = arg_count();

  if ($n_args == 2 && is_uint(arg(1))) {
    if (arg(0) == 'user') {
      return TRUE;
    }
    elseif (arg(0) == 'node') {
      $node = node_load(arg(1));
      return in_array($node->type, moonmars_channels_node_types());
    }
  }

  return FALSE;
}
