<?php

use \stdClass;

/**
 * Implements hook_menu().
 */
function moonmars_geo_menu() {
  $items = array();
  $items['ajax/geo/country'] = array(
    'page callback'    => 'moonmars_geo_ajax_lookup_country',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  $items['ajax/geo/capital'] = array(
    'page callback'    => 'moonmars_geo_ajax_lookup_capital',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  $items['ajax/geo/province'] = array(
    'page callback'    => 'moonmars_geo_ajax_lookup_province',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  $items['ajax/geo/timezone'] = array(
    'page callback'    => 'moonmars_geo_ajax_lookup_timezone',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  $items['ajax/geo/country-timezone'] = array(
    'page callback'    => 'moonmars_geo_ajax_lookup_country_timezone',
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Get country info from geonames.
 *
 * @param string $country_code
 * @return string|bool
 */
function moonmars_geo_lookup_country($country_code) {
  $result = geonames_countryinfo($country_code);
  return $result ? ((object) $result) : FALSE;
}

/**
 * Get geonames info for a given country.
 *
 * @return string
 */
function moonmars_geo_ajax_lookup_country() {
  $country_code = $_REQUEST['country_code'];
  if (!$country_code) {
    echo '';
    return;
  }
  echo json_encode(geonames_countryinfo($country_code));
}

/**
 * Get capital city info from geonames.
 *
 * @param string $capital_name
 * @return string|bool
 */
function moonmars_geo_lookup_capital($country_code) {
  // Get the country info, which includes the name of the capital city:
  $country = moonmars_geo_lookup_country($country_code);
  if (!$country) {
    return FALSE;
  }
  // Get info about the capital city:
  $result = geonames_query('search',
    array(
      'name' => $country->capital,
      'country' => $country_code,
      'featureClass' => 'P',
      'featureCode' => 'PPLC',
    )
  );
  return isset($result->results[0]) ? ((object) $result->results[0]) : FALSE;
}

/**
 * Get capital city info from geonames, via AJAX.
 *
 * @return string
 */
function moonmars_geo_ajax_lookup_capital() {
  $country_code = $_REQUEST['country_code'];
  if (!$country_code) {
    echo '';
    return;
  }
  echo json_encode(moonmars_geo_lookup_capital($country_code));
}

/**
 * Get a state or province from a location.
 *
 * @param float $lat
 * @param float $lng
 * @return object|bool
 */
function moonmars_geo_lookup_province($lat, $lng) {
  // Get info about the capital city:
  $result = geonames_query('countrysubdivision', array(
    'lat' => $lat,
    'lng' => $lng,
    'level' => 4,
  ));
//  dbg($result);
  return isset($result->results[0]) ? ((object) $result->results[0]) : FALSE;
}

/**
 * Get a state or province from a location, via AJAX.
 *
 * @return string
 */
function moonmars_geo_ajax_lookup_province() {
  $lat = $_REQUEST['lat'];
  $lng = $_REQUEST['lng'];
  if (!$lat || !$lng) {
    echo '';
    return;
  }
  echo json_encode(moonmars_geo_lookup_province($lat, $lng));
}

/**
 * Lookup timezone for a given latitude and longitude.
 *
 * @param float $lat
 * @param float $lng
 * @return object|bool
 */
function moonmars_geo_lookup_timezone($lat, $lng) {
  $result = geonames_query('timezone', array(
    'lat' => $lat,
    'lng' => $lng,
  ));
  return isset($result->results[0]) ? ((object) $result->results[0]) : FALSE;
}

/**
 * Lookup timezone for a given latitude and longitude, via AJAX.
 *
 * @return string
 */
function moonmars_geo_ajax_lookup_timezone() {
  $lat = $_REQUEST['lat'];
  $lng = $_REQUEST['lng'];
  if (!$lat || !$lng) {
    echo '';
    return;
  }
  echo json_encode(moonmars_geo_lookup_timezone($lat, $lng));
}

/**
 * Lookup default timezone for a given country.
 * Uses the lat/lng of the capital city.
 *
 * @return array|mixed|string
 */
function moonmars_geo_lookup_country_timezone($country_code) {
  $result = FALSE;
  $capital = moonmars_geo_lookup_capital($country_code);
  if ($capital) {
    $result = new stdClass;
    $result->capital = $capital;

    // Get the timezone for the capital:
    $timezone = moonmars_geo_lookup_timezone($capital->lat, $capital->lng);
    if ($timezone) {
      $result->timezone = $timezone;
    }

    // Get the state/province for the capital:
//    $province = moonmars_geo_lookup_province($capital->lat, $capital->lng);
//    if ($province) {
//      $result->province = $province;
//    }

  }
  return $result ?: FALSE;
}

/**
 * Lookup timezone for a given country.
 *
 * @return array|mixed|string
 */
function moonmars_geo_ajax_lookup_country_timezone() {
  $country_code = $_REQUEST['country_code'];
  if (!$country_code) {
    echo '';
    return;
  }
  echo json_encode(moonmars_geo_lookup_country_timezone($country_code));
}
