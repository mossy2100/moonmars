<?php

/**
 * @file
 * Enable user chat support in Drupal.
 */

/**
 * Implements hook_nodejs_user_presence_list().
 */
function chatroom_chatbar_nodejs_user_presence_list($auth_user) {
  $uids = array();
  if (module_exists('flag_friend')) {
    $uids = array_keys(flag_friend_get_friends($auth_user->uid));
  }
  return $uids;
}

/**
 * Return this $account's buddy list.
 */
function chatroom_chatbar_user_list($account) {
  $uids = array_unique(module_invoke_all('nodejs_user_presence_list', $account));
  return user_load_multiple($uids);
}

/**
 * Return the list of uids online right now from $uids.
 */
function chatroom_chatbar_get_online_uids($uids) {
  return db_select('nodejs_presence', 'njp')
    ->condition('njp.uid', $uids, 'IN')
    ->fields('njp', array('uid'))
    ->execute()
    ->fetchCol();
}

/**
 * Implements hook_init().
 */
function chatroom_chatbar_init() {
  if (chatroom_chatbar_chat_enabled()) {
    chatroom_chatbar_add_js();
  }
}

/**
 * Returns TRUE if the user chat bar is enabled for the logged in user.
 */
function chatroom_chatbar_chat_enabled() {
  // TODO: stubbity stub stub.
  return TRUE;
}

/**
 * Adds js to make user chat work.
 */
function chatroom_chatbar_add_js() {
  global $user;

  static $initialised;
  if (is_null($initialised)) {
    $initialised = TRUE;
    $js = array(
      'chatroom' => array(
        'uid' => $user->uid,
        'userBar' => array(
          'html' => theme('chatroom_chatbar_user_bar', array('account' => $user)),
        ),
      ),
    );
    drupal_add_css(drupal_get_path('module', 'chatroom_chatbar') . '/chatroom.chatbar.css');
    drupal_add_js($js, 'setting');
    drupal_add_js(drupal_get_path('module', 'chatroom_chatbar') . '/chatroom.chatbar.js', array('weight' => 11));
  }
}

/**
 * Theme the chatroom user bar.
 */
function theme_chatroom_chatbar_user_bar($variables) {
  if ($variables['account']->uid == 0) {
    return '';
  }

  $buddies = chatroom_chatbar_user_list($variables['account']);
  $buddylist_html = '';
  if ($buddies) {
    $online_uids = chatroom_chatbar_get_online_uids(array_keys($buddies));
    $buddylist_html = '<ul>';
    foreach ($buddies as $buddy) {
      $buddy->online = in_array($buddy->uid, $online_uids);
      $class = 'chatroom-chatbar-' . ($buddy->online ? 'online' : 'offline');
      $buddylist_html .= '<li id="chatroom-chatbar-' . $buddy->uid . '" class="' . $class . '">';
      $buddylist_html .= theme('chatroom_chatbar_username', array('account' => $buddy));
      $buddylist_html .= '</li>';
    }
    $buddylist_html .= '</ul>';
    $buddylist_title = t('Your buddies');
  }
  else {
    $buddylist_title = t('No buddies online');
  }

  $output =<<<CHATBAR
<div id="chatroom-chatbar-chatbar">
 <div id="chatroom-chatbar-list" class="chatroom-chatbar-section-container">
   <a id="chatroom-chatbar-toggle" class="chatroom-chatbar-tab-button">Buddys</a>
   <div class="chatroom-chatbar-chatbar-pane"><h2 id="chatroom-chatbar-buddylist-title">$buddylist_title</h2>$buddylist_html</div>
 </div>
</div>
CHATBAR;
  return $output;
}

/**
 * Theme a buddy in the buddy list.
 */
function theme_chatroom_chatbar_username($variables) {
  $account = $variables['account'];
  if ($account->online) {
    $output = '<a class="chatroom-chatbar-start-chat-link" href="/user/';
    $output .= $account->uid . '">' . $account->name . '</a>';
  }
  else {
    $output = $account->name;
  }
  return $output;
}

/**
 * Implements hook_theme().
 */
function chatroom_chatbar_theme() {
  return array(
    'chatroom_chatbar_user_bar' => array(
      'arguments' => array('account' => NULL),
    ),
    'chatroom_chatbar_username' => array(
      'arguments' => array('account' => NULL),
    ),
  );
}

